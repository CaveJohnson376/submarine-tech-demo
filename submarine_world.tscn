[gd_scene load_steps=20 format=2]

[ext_resource path="res://rim.material" type="Material" id=1]
[ext_resource path="res://material_assets/Scratches005_2K-PNG/glass.material" type="Material" id=2]
[ext_resource path="res://material_assets/MetalPlates012_2K-PNG/metal.material" type="Material" id=3]
[ext_resource path="res://etc_assets/Spatial.gd" type="Script" id=4]

[sub_resource type="ArrayMesh" id=1]
resource_name = "Cube.001"
surfaces/0 = {
"aabb": AABB( -0.312401, -0.0994299, 2.08728, 0.624803, 1.20985, 0.420789 ),
"array_data": PoolByteArray( 20, 243, 159, 190, 150, 10, 99, 63, 7, 150, 5, 64, 41, 129, 0, 42, 25, 55, 115, 56, 231, 144, 135, 61, 82, 49, 75, 63, 2, 188, 17, 64, 41, 129, 0, 42, 167, 56, 153, 58, 239, 144, 135, 189, 82, 49, 75, 63, 2, 188, 17, 64, 41, 129, 0, 42, 167, 56, 217, 57, 20, 243, 159, 62, 150, 10, 99, 63, 7, 150, 5, 64, 73, 222, 67, 108, 128, 57, 115, 56, 20, 243, 159, 62, 96, 34, 142, 63, 60, 132, 32, 64, 73, 222, 67, 108, 128, 57, 249, 50, 138, 244, 105, 62, 15, 48, 106, 63, 79, 63, 30, 64, 73, 222, 67, 108, 134, 56, 226, 52, 20, 243, 159, 62, 96, 34, 142, 63, 60, 132, 32, 64, 0, 237, 127, 63, 25, 55, 172, 48, 138, 244, 105, 190, 15, 48, 106, 63, 79, 63, 30, 64, 0, 237, 127, 63, 160, 43, 152, 52, 138, 244, 105, 62, 15, 48, 106, 63, 79, 63, 30, 64, 0, 237, 127, 63, 37, 54, 152, 52, 231, 144, 135, 61, 82, 49, 75, 63, 150, 92, 26, 64, 127, 0, 0, 61, 61, 59, 0, 60, 231, 144, 135, 61, 231, 161, 203, 189, 2, 188, 17, 64, 127, 0, 0, 61, 122, 58, 13, 54, 231, 144, 135, 61, 82, 49, 75, 63, 2, 188, 17, 64, 127, 0, 0, 61, 122, 58, 251, 59, 20, 243, 159, 190, 150, 10, 99, 63, 7, 150, 5, 64, 44, 127, 130, 63, 255, 59, 12, 60, 20, 243, 159, 62, 96, 34, 142, 63, 60, 132, 32, 64, 44, 127, 130, 63, 0, 0, 0, 0, 20, 243, 159, 62, 150, 10, 99, 63, 7, 150, 5, 64, 44, 127, 130, 63, 0, 0, 12, 60, 231, 144, 135, 61, 231, 161, 203, 189, 2, 188, 17, 64, 0, 129, 129, 63, 186, 57, 82, 52, 239, 144, 135, 189, 231, 161, 203, 189, 150, 92, 26, 64, 0, 129, 129, 63, 122, 58, 218, 53, 239, 144, 135, 189, 231, 161, 203, 189, 2, 188, 17, 64, 0, 129, 129, 63, 122, 58, 82, 52, 239, 144, 135, 189, 82, 49, 75, 63, 150, 92, 26, 64, 0, 0, 127, 63, 152, 49, 21, 54, 231, 144, 135, 61, 231, 161, 203, 189, 150, 92, 26, 64, 0, 0, 127, 63, 77, 52, 0, 60, 231, 144, 135, 61, 82, 49, 75, 63, 150, 92, 26, 64, 0, 0, 127, 63, 77, 52, 21, 54, 231, 144, 135, 61, 82, 49, 75, 63, 2, 188, 17, 64, 127, 127, 129, 63, 186, 57, 218, 53, 239, 144, 135, 189, 231, 161, 203, 189, 2, 188, 17, 64, 127, 127, 129, 63, 122, 58, 0, 60, 239, 144, 135, 189, 82, 49, 75, 63, 2, 188, 17, 64, 127, 127, 129, 63, 122, 58, 218, 53, 239, 144, 135, 189, 82, 49, 75, 63, 2, 188, 17, 64, 129, 0, 0, 61, 61, 59, 23, 54, 239, 144, 135, 189, 231, 161, 203, 189, 150, 92, 26, 64, 129, 0, 0, 61, 0, 60, 251, 59, 239, 144, 135, 189, 82, 49, 75, 63, 150, 92, 26, 64, 129, 0, 0, 61, 0, 60, 13, 54, 138, 244, 105, 62, 15, 48, 106, 63, 79, 63, 30, 64, 0, 214, 127, 63, 37, 54, 152, 52, 239, 144, 135, 189, 82, 49, 75, 63, 150, 92, 26, 64, 0, 214, 127, 63, 152, 49, 21, 54, 231, 144, 135, 61, 82, 49, 75, 63, 150, 92, 26, 64, 0, 214, 127, 63, 77, 52, 21, 54, 231, 144, 135, 61, 82, 49, 75, 63, 2, 188, 17, 64, 54, 184, 0, 63, 167, 56, 153, 58, 138, 244, 105, 62, 15, 48, 106, 63, 79, 63, 30, 64, 54, 184, 0, 63, 186, 57, 133, 59, 231, 144, 135, 61, 82, 49, 75, 63, 150, 92, 26, 64, 54, 184, 0, 63, 107, 57, 153, 58, 138, 244, 105, 190, 15, 48, 106, 63, 79, 63, 30, 64, 183, 222, 189, 108, 25, 55, 128, 55, 20, 243, 159, 190, 96, 34, 142, 63, 60, 132, 32, 64, 183, 222, 189, 108, 134, 56, 115, 56, 20, 243, 159, 190, 150, 10, 99, 63, 7, 150, 5, 64, 183, 222, 189, 108, 134, 56, 249, 50, 138, 244, 105, 190, 15, 48, 106, 63, 79, 63, 30, 64, 202, 184, 0, 63, 186, 57, 237, 56, 239, 144, 135, 189, 82, 49, 75, 63, 2, 188, 17, 64, 202, 184, 0, 63, 167, 56, 217, 57, 239, 144, 135, 189, 82, 49, 75, 63, 150, 92, 26, 64, 202, 184, 0, 63, 107, 57, 217, 57, 20, 243, 159, 190, 150, 10, 99, 63, 7, 150, 5, 64, 41, 129, 0, 42, 25, 55, 115, 56, 20, 243, 159, 62, 150, 10, 99, 63, 7, 150, 5, 64, 41, 129, 0, 42, 25, 55, 0, 60, 231, 144, 135, 61, 82, 49, 75, 63, 2, 188, 17, 64, 41, 129, 0, 42, 167, 56, 153, 58, 20, 243, 159, 62, 96, 34, 142, 63, 60, 132, 32, 64, 0, 237, 127, 63, 25, 55, 172, 48, 20, 243, 159, 190, 96, 34, 142, 63, 60, 132, 32, 64, 0, 237, 127, 63, 0, 0, 172, 48, 138, 244, 105, 190, 15, 48, 106, 63, 79, 63, 30, 64, 0, 237, 127, 63, 160, 43, 152, 52, 231, 144, 135, 61, 231, 161, 203, 189, 150, 92, 26, 64, 127, 0, 0, 61, 61, 59, 23, 54, 20, 243, 159, 190, 150, 10, 99, 63, 7, 150, 5, 64, 44, 127, 129, 63, 255, 59, 12, 60, 20, 243, 159, 190, 96, 34, 142, 63, 60, 132, 32, 64, 44, 127, 129, 63, 0, 60, 0, 0, 20, 243, 159, 62, 96, 34, 142, 63, 60, 132, 32, 64, 44, 127, 129, 63, 0, 0, 0, 0, 231, 144, 135, 61, 231, 161, 203, 189, 150, 92, 26, 64, 0, 129, 129, 63, 186, 57, 218, 53, 239, 144, 135, 189, 231, 161, 203, 189, 150, 92, 26, 64, 0, 0, 127, 63, 152, 49, 0, 60, 231, 144, 135, 61, 231, 161, 203, 189, 2, 188, 17, 64, 127, 127, 129, 63, 186, 57, 0, 60, 239, 144, 135, 189, 231, 161, 203, 189, 2, 188, 17, 64, 129, 0, 0, 61, 61, 59, 0, 60, 138, 244, 105, 62, 15, 48, 106, 63, 79, 63, 30, 64, 0, 214, 127, 63, 37, 54, 152, 52, 138, 244, 105, 190, 15, 48, 106, 63, 79, 63, 30, 64, 0, 214, 127, 63, 160, 43, 152, 52, 239, 144, 135, 189, 82, 49, 75, 63, 150, 92, 26, 64, 0, 214, 127, 63, 152, 49, 21, 54, 231, 144, 135, 61, 82, 49, 75, 63, 2, 188, 17, 64, 38, 182, 0, 73, 167, 56, 153, 58, 20, 243, 159, 62, 150, 10, 99, 63, 7, 150, 5, 64, 38, 182, 0, 73, 25, 55, 0, 60, 138, 244, 105, 62, 15, 48, 106, 63, 79, 63, 30, 64, 38, 182, 0, 73, 186, 57, 133, 59, 138, 244, 105, 190, 15, 48, 106, 63, 79, 63, 30, 64, 218, 182, 0, 73, 186, 57, 237, 56, 20, 243, 159, 190, 150, 10, 99, 63, 7, 150, 5, 64, 218, 182, 0, 73, 25, 55, 115, 56, 239, 144, 135, 189, 82, 49, 75, 63, 2, 188, 17, 64, 218, 182, 0, 73, 167, 56, 217, 57 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 15, 0, 17, 0, 16, 0, 18, 0, 20, 0, 19, 0, 21, 0, 23, 0, 22, 0, 24, 0, 26, 0, 25, 0, 27, 0, 29, 0, 28, 0, 30, 0, 32, 0, 31, 0, 33, 0, 35, 0, 34, 0, 36, 0, 38, 0, 37, 0, 39, 0, 41, 0, 40, 0, 42, 0, 44, 0, 43, 0, 9, 0, 10, 0, 45, 0, 46, 0, 48, 0, 47, 0, 15, 0, 16, 0, 49, 0, 18, 0, 19, 0, 50, 0, 21, 0, 22, 0, 51, 0, 24, 0, 25, 0, 52, 0, 53, 0, 55, 0, 54, 0, 56, 0, 58, 0, 57, 0, 59, 0, 61, 0, 60, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 72,
"material": ExtResource( 3 ),
"name": "metal",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 62
}

[sub_resource type="ConcavePolygonShape" id=3]
data = PoolVector3Array( -0.3124, 0.8869, 2.0873, -0.0662, 0.7937, 2.2771, 0.0662, 0.7937, 2.2771, 0.3124, 0.8869, 2.0873, 0.2285, 0.9148, 2.4726, 0.3124, 1.1104, 2.5081, 0.3124, 1.1104, 2.5081, 0.2285, 0.9148, 2.4726, -0.2285, 0.9148, 2.4726, 0.0662, 0.7937, 2.4119, 0.0662, 0.7937, 2.2771, 0.0662, -0.0994, 2.2771, -0.3124, 0.8869, 2.0873, 0.3124, 0.8869, 2.0873, 0.3124, 1.1104, 2.5081, 0.0662, -0.0994, 2.2771, -0.0662, -0.0994, 2.2771, -0.0662, -0.0994, 2.4119, -0.0662, 0.7937, 2.4119, 0.0662, 0.7937, 2.4119, 0.0662, -0.0994, 2.4119, 0.0662, 0.7937, 2.2771, -0.0662, 0.7937, 2.2771, -0.0662, -0.0994, 2.2771, -0.0662, 0.7937, 2.2771, -0.0662, 0.7937, 2.4119, -0.0662, -0.0994, 2.4119, 0.2285, 0.9148, 2.4726, 0.0662, 0.7937, 2.4119, -0.0662, 0.7937, 2.4119, 0.0662, 0.7937, 2.2771, 0.0662, 0.7937, 2.4119, 0.2285, 0.9148, 2.4726, -0.2285, 0.9148, 2.4726, -0.3124, 0.8869, 2.0873, -0.3124, 1.1104, 2.5081, -0.2285, 0.9148, 2.4726, -0.0662, 0.7937, 2.4119, -0.0662, 0.7937, 2.2771, -0.3124, 0.8869, 2.0873, 0.0662, 0.7937, 2.2771, 0.3124, 0.8869, 2.0873, 0.3124, 1.1104, 2.5081, -0.2285, 0.9148, 2.4726, -0.3124, 1.1104, 2.5081, 0.0662, 0.7937, 2.4119, 0.0662, -0.0994, 2.2771, 0.0662, -0.0994, 2.4119, -0.3124, 0.8869, 2.0873, 0.3124, 1.1104, 2.5081, -0.3124, 1.1104, 2.5081, 0.0662, -0.0994, 2.2771, -0.0662, -0.0994, 2.4119, 0.0662, -0.0994, 2.4119, -0.0662, 0.7937, 2.4119, 0.0662, -0.0994, 2.4119, -0.0662, -0.0994, 2.4119, 0.0662, 0.7937, 2.2771, -0.0662, -0.0994, 2.2771, 0.0662, -0.0994, 2.2771, -0.0662, 0.7937, 2.2771, -0.0662, -0.0994, 2.4119, -0.0662, -0.0994, 2.2771, 0.2285, 0.9148, 2.4726, -0.0662, 0.7937, 2.4119, -0.2285, 0.9148, 2.4726, 0.0662, 0.7937, 2.2771, 0.2285, 0.9148, 2.4726, 0.3124, 0.8869, 2.0873, -0.2285, 0.9148, 2.4726, -0.0662, 0.7937, 2.2771, -0.3124, 0.8869, 2.0873 )

[sub_resource type="ArrayMesh" id=2]
resource_name = "Cube"
surfaces/0 = {
"aabb": AABB( -1.5, 1.19209e-07, -3.5, 3, 3, 6.50001 ),
"array_data": PoolByteArray( 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 64, 161, 126, 130, 63, 243, 52, 9, 51, 221, 217, 81, 191, 104, 114, 138, 62, 198, 196, 37, 64, 161, 126, 130, 63, 168, 51, 161, 53, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 32, 64, 161, 126, 130, 63, 32, 52, 24, 54, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 192, 95, 225, 225, 15, 78, 55, 24, 54, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 64, 95, 225, 225, 15, 178, 52, 0, 60, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 225, 225, 15, 78, 55, 0, 60, 215, 255, 255, 179, 0, 0, 192, 63, 0, 0, 96, 192, 227, 9, 95, 63, 66, 55, 60, 51, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 64, 192, 227, 9, 95, 63, 131, 56, 24, 54, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 192, 227, 9, 95, 63, 235, 56, 60, 51, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 161, 225, 225, 111, 45, 48, 0, 60, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 192, 161, 225, 225, 111, 178, 52, 24, 54, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 192, 161, 225, 225, 111, 45, 48, 24, 54, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 32, 64, 0, 127, 129, 63, 89, 58, 235, 54, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 64, 192, 0, 127, 129, 63, 0, 60, 0, 60, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 32, 64, 0, 127, 129, 63, 0, 60, 235, 54, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 192, 0, 129, 127, 63, 89, 58, 0, 60, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 64, 0, 129, 127, 63, 178, 56, 24, 54, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 192, 0, 129, 127, 63, 178, 56, 0, 60, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 32, 64, 161, 31, 31, 111, 0, 0, 150, 59, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 192, 161, 31, 31, 111, 45, 48, 24, 54, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 64, 192, 161, 31, 31, 111, 0, 0, 24, 54, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 32, 64, 95, 31, 31, 15, 178, 56, 150, 59, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 192, 95, 31, 31, 15, 78, 55, 24, 54, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 31, 31, 15, 78, 55, 0, 60, 223, 217, 81, 63, 104, 114, 138, 62, 193, 196, 37, 64, 95, 126, 130, 63, 125, 44, 161, 53, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 95, 126, 130, 63, 0, 0, 9, 51, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 32, 64, 95, 126, 130, 63, 154, 42, 24, 54, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 130, 130, 130, 63, 0, 0, 9, 51, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 130, 130, 130, 63, 125, 44, 15, 46, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 64, 130, 130, 130, 63, 154, 42, 76, 44, 221, 217, 81, 191, 179, 177, 46, 64, 0, 0, 64, 64, 127, 127, 130, 63, 168, 51, 15, 46, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 64, 127, 127, 130, 63, 243, 52, 9, 51, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 64, 127, 127, 129, 63, 32, 52, 76, 44, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 127, 127, 129, 63, 125, 44, 15, 46, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 64, 127, 127, 129, 63, 154, 42, 76, 44, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 32, 64, 95, 127, 129, 63, 32, 52, 24, 54, 223, 217, 81, 63, 104, 114, 138, 62, 193, 196, 37, 64, 95, 127, 129, 63, 125, 44, 161, 53, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 32, 64, 95, 127, 129, 63, 154, 42, 24, 54, 215, 255, 255, 179, 0, 0, 192, 63, 0, 0, 96, 192, 29, 247, 127, 79, 66, 55, 60, 51, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 192, 29, 247, 127, 79, 196, 53, 145, 44, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 192, 29, 247, 127, 79, 243, 52, 60, 51, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 192, 0, 225, 126, 63, 196, 53, 145, 44, 215, 255, 255, 179, 0, 0, 192, 63, 0, 0, 96, 192, 0, 225, 126, 63, 66, 55, 60, 51, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 192, 0, 225, 126, 63, 131, 56, 145, 44, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 192, 227, 247, 95, 63, 131, 56, 145, 44, 215, 255, 255, 179, 0, 0, 192, 63, 0, 0, 96, 192, 227, 247, 95, 63, 66, 55, 60, 51, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 192, 227, 247, 95, 63, 235, 56, 60, 51, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 64, 192, 29, 9, 127, 47, 196, 53, 24, 54, 215, 255, 255, 179, 0, 0, 192, 63, 0, 0, 96, 192, 29, 9, 127, 47, 66, 55, 60, 51, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 192, 29, 9, 127, 47, 243, 52, 60, 51, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 64, 192, 0, 31, 127, 63, 131, 56, 24, 54, 215, 255, 255, 179, 0, 0, 192, 63, 0, 0, 96, 192, 0, 31, 127, 63, 66, 55, 60, 51, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 64, 192, 0, 31, 127, 63, 196, 53, 24, 54, 0, 0, 192, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 127, 129, 63, 243, 52, 9, 51, 103, 99, 157, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 127, 129, 63, 129, 52, 9, 51, 221, 217, 81, 191, 104, 114, 138, 62, 198, 196, 37, 64, 95, 127, 129, 63, 168, 51, 161, 53, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 192, 95, 225, 225, 15, 178, 52, 24, 54, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 161, 225, 225, 111, 45, 48, 0, 60, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 64, 161, 225, 225, 111, 178, 52, 0, 60, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 192, 161, 225, 225, 111, 178, 52, 24, 54, 0, 0, 128, 63, 215, 255, 255, 51, 0, 0, 64, 192, 0, 127, 129, 63, 89, 58, 0, 60, 0, 0, 128, 63, 0, 0, 64, 64, 0, 0, 64, 64, 0, 129, 127, 63, 89, 58, 24, 54, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 161, 31, 31, 111, 45, 48, 0, 60, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 64, 192, 95, 31, 31, 15, 178, 56, 24, 54, 223, 217, 81, 63, 104, 114, 138, 62, 193, 196, 37, 64, 95, 127, 129, 63, 125, 44, 161, 53, 103, 99, 157, 63, 0, 0, 192, 63, 0, 0, 64, 64, 95, 127, 129, 63, 36, 39, 9, 51, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 95, 127, 129, 63, 0, 0, 9, 51, 0, 0, 192, 63, 0, 0, 192, 63, 0, 0, 64, 64, 126, 127, 129, 63, 0, 0, 9, 51, 103, 99, 157, 63, 0, 0, 192, 63, 0, 0, 64, 64, 126, 127, 129, 63, 36, 39, 9, 51, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 126, 127, 129, 63, 125, 44, 15, 46, 103, 99, 157, 191, 0, 0, 192, 63, 0, 0, 64, 64, 127, 127, 129, 63, 129, 52, 9, 51, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 126, 127, 129, 63, 125, 44, 15, 46, 221, 217, 81, 191, 179, 177, 46, 64, 0, 0, 64, 64, 126, 127, 129, 63, 168, 51, 15, 46, 0, 0, 128, 191, 0, 0, 64, 64, 0, 0, 64, 64, 126, 127, 129, 63, 32, 52, 76, 44, 0, 0, 128, 191, 215, 255, 255, 51, 0, 0, 32, 64, 161, 126, 130, 63, 32, 52, 24, 54, 221, 217, 81, 191, 104, 114, 138, 62, 198, 196, 37, 64, 161, 126, 130, 63, 168, 51, 161, 53, 223, 217, 81, 63, 104, 114, 138, 62, 193, 196, 37, 64, 161, 126, 130, 63, 125, 44, 161, 53 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 15, 0, 17, 0, 16, 0, 18, 0, 20, 0, 19, 0, 21, 0, 23, 0, 22, 0, 24, 0, 26, 0, 25, 0, 27, 0, 29, 0, 28, 0, 30, 0, 32, 0, 31, 0, 33, 0, 34, 0, 32, 0, 35, 0, 37, 0, 36, 0, 38, 0, 40, 0, 39, 0, 41, 0, 43, 0, 42, 0, 44, 0, 46, 0, 45, 0, 47, 0, 49, 0, 48, 0, 50, 0, 52, 0, 51, 0, 53, 0, 55, 0, 54, 0, 3, 0, 4, 0, 56, 0, 57, 0, 59, 0, 58, 0, 12, 0, 13, 0, 60, 0, 15, 0, 16, 0, 61, 0, 18, 0, 19, 0, 62, 0, 21, 0, 22, 0, 63, 0, 64, 0, 66, 0, 65, 0, 67, 0, 69, 0, 68, 0, 30, 0, 31, 0, 70, 0, 71, 0, 73, 0, 72, 0, 74, 0, 76, 0, 75, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 90,
"material": ExtResource( 3 ),
"name": "metal",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 77
}
surfaces/1 = {
"aabb": AABB( -1.2296, 0.270404, 2.64013, 2.45919, 2.4592, 0.409876 ),
"array_data": PoolByteArray( 221, 217, 81, 63, 179, 177, 46, 64, 51, 51, 67, 64, 126, 127, 129, 63, 66, 49, 0, 0, 103, 99, 157, 191, 0, 0, 192, 63, 51, 51, 67, 64, 126, 127, 129, 63, 228, 59, 202, 55, 221, 217, 81, 191, 179, 177, 46, 64, 51, 51, 67, 64, 126, 127, 129, 63, 147, 58, 0, 0, 103, 99, 157, 63, 0, 0, 192, 63, 51, 51, 67, 64, 95, 127, 130, 63, 0, 0, 202, 55, 221, 217, 81, 191, 104, 114, 138, 62, 249, 247, 40, 64, 95, 127, 130, 63, 147, 58, 0, 60, 103, 99, 157, 191, 0, 0, 192, 63, 51, 51, 67, 64, 95, 127, 130, 63, 228, 59, 202, 55, 221, 217, 81, 63, 179, 177, 46, 64, 51, 51, 67, 64, 126, 127, 130, 63, 66, 49, 0, 0, 103, 99, 157, 63, 0, 0, 192, 63, 51, 51, 67, 64, 126, 127, 130, 63, 0, 0, 202, 55, 103, 99, 157, 191, 0, 0, 192, 63, 51, 51, 67, 64, 126, 127, 130, 63, 228, 59, 202, 55, 103, 99, 157, 63, 0, 0, 192, 63, 51, 51, 67, 64, 161, 126, 130, 63, 0, 0, 202, 55, 223, 217, 81, 63, 104, 114, 138, 62, 245, 247, 40, 64, 161, 126, 130, 63, 66, 49, 0, 60, 221, 217, 81, 191, 104, 114, 138, 62, 249, 247, 40, 64, 161, 126, 130, 63, 147, 58, 0, 60 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 12,
"material": ExtResource( 2 ),
"name": "glass",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 12
}
surfaces/2 = {
"aabb": AABB( -1.2296, 0.270404, 2.59013, 2.45919, 2.4592, 0.459876 ),
"array_data": PoolByteArray( 221, 217, 81, 63, 179, 177, 46, 64, 51, 51, 67, 64, 0, 129, 127, 127, 4, 52, 247, 52, 221, 217, 81, 191, 179, 177, 46, 64, 0, 0, 64, 64, 0, 129, 127, 127, 90, 52, 0, 60, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 0, 129, 127, 127, 90, 52, 247, 52, 223, 217, 81, 63, 104, 114, 138, 62, 245, 247, 40, 64, 161, 31, 106, 123, 179, 50, 116, 27, 103, 99, 157, 63, 0, 0, 192, 63, 0, 0, 64, 64, 161, 31, 106, 123, 88, 48, 89, 55, 223, 217, 81, 63, 104, 114, 138, 62, 193, 196, 37, 64, 161, 31, 106, 123, 92, 51, 0, 0, 221, 217, 81, 191, 104, 114, 138, 62, 249, 247, 40, 64, 0, 127, 0, 63, 4, 52, 0, 60, 223, 217, 81, 63, 104, 114, 138, 62, 193, 196, 37, 64, 0, 127, 0, 63, 92, 51, 247, 52, 221, 217, 81, 191, 104, 114, 138, 62, 198, 196, 37, 64, 0, 127, 0, 63, 92, 51, 0, 60, 221, 217, 81, 191, 179, 177, 46, 64, 51, 51, 67, 64, 95, 225, 109, 124, 9, 46, 0, 0, 103, 99, 157, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 225, 109, 124, 77, 37, 83, 56, 221, 217, 81, 191, 179, 177, 46, 64, 0, 0, 64, 64, 95, 225, 109, 124, 92, 47, 116, 27, 103, 99, 157, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 31, 150, 123, 77, 37, 83, 56, 221, 217, 81, 191, 104, 114, 138, 62, 249, 247, 40, 64, 95, 31, 150, 123, 9, 46, 248, 59, 221, 217, 81, 191, 104, 114, 138, 62, 198, 196, 37, 64, 95, 31, 150, 123, 92, 47, 0, 60, 103, 99, 157, 63, 0, 0, 192, 63, 51, 51, 67, 64, 161, 225, 147, 124, 92, 47, 104, 55, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 161, 225, 147, 124, 92, 51, 248, 59, 103, 99, 157, 63, 0, 0, 192, 63, 0, 0, 64, 64, 161, 225, 147, 124, 88, 48, 89, 55, 221, 217, 81, 191, 179, 177, 46, 64, 51, 51, 67, 64, 0, 129, 127, 127, 4, 52, 0, 60, 103, 99, 157, 63, 0, 0, 192, 63, 51, 51, 67, 64, 161, 31, 106, 123, 92, 47, 104, 55, 223, 217, 81, 63, 104, 114, 138, 62, 245, 247, 40, 64, 0, 127, 0, 63, 4, 52, 247, 52, 103, 99, 157, 191, 0, 0, 192, 63, 51, 51, 67, 64, 95, 225, 109, 124, 0, 0, 75, 56, 103, 99, 157, 191, 0, 0, 192, 63, 0, 0, 64, 64, 95, 31, 150, 123, 77, 37, 83, 56, 103, 99, 157, 191, 0, 0, 192, 63, 51, 51, 67, 64, 95, 31, 150, 123, 0, 0, 75, 56, 221, 217, 81, 191, 104, 114, 138, 62, 249, 247, 40, 64, 95, 31, 150, 123, 9, 46, 248, 59, 103, 99, 157, 63, 0, 0, 192, 63, 51, 51, 67, 64, 161, 225, 147, 124, 92, 47, 104, 55, 221, 217, 81, 63, 179, 177, 46, 64, 51, 51, 67, 64, 161, 225, 147, 124, 179, 50, 0, 60, 221, 217, 81, 63, 179, 177, 46, 64, 0, 0, 64, 64, 161, 225, 147, 124, 92, 51, 248, 59 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 15, 0, 17, 0, 16, 0, 0, 0, 1, 0, 18, 0, 3, 0, 4, 0, 19, 0, 6, 0, 7, 0, 20, 0, 9, 0, 10, 0, 21, 0, 22, 0, 24, 0, 23, 0, 25, 0, 27, 0, 26, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 36,
"material": ExtResource( 1 ),
"name": "rim",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 28
}

[sub_resource type="ConcavePolygonShape" id=4]
data = PoolVector3Array( -1.5, 1.5, 3, -1, 0, 2.5, -0.8197, 0.2704, 2.5901, -1.5, 1.5, -3, -1.5, 1.5, 3, -1, 3, 3, 0, 1.5, -3.5, 1.5, 1.5, -3, 1, 0, -3, 1.5, 1.5, 3, 1.5, 1.5, -3, 1, 3, -3, 1, 0, 2.5, -1, 0, 2.5, -1, 0, -3, 1, 3, -3, -1, 3, -3, -1, 3, 3, 1, 0, 2.5, 1, 0, -3, 1.5, 1.5, -3, -1, 0, 2.5, -1.5, 1.5, 3, -1.5, 1.5, -3, 0.8197, 0.2704, 2.5901, 1, 0, 2.5, 1.5, 1.5, 3, 1.5, 1.5, 3, 1, 3, 3, 0.8197, 2.7296, 3, -0.8197, 2.7296, 3, -1, 3, 3, -1.5, 1.5, 3, 0.8197, 2.7296, 3, 1, 3, 3, -1, 3, 3, -1, 0, 2.5, 1, 0, 2.5, 0.8197, 0.2704, 2.5901, 0, 1.5, -3.5, -1.5, 1.5, -3, -1, 3, -3, -1, 3, -3, 1, 3, -3, 0, 1.5, -3.5, 1, 3, -3, 1.5, 1.5, -3, 0, 1.5, -3.5, -1, 0, -3, -1.5, 1.5, -3, 0, 1.5, -3.5, 1, 0, -3, -1, 0, -3, 0, 1.5, -3.5, -1.5, 1.5, 3, -0.8197, 0.2704, 2.5901, -1.2296, 1.5, 3, -1.5, 1.5, -3, -1, 3, 3, -1, 3, -3, 1.5, 1.5, 3, 1, 3, -3, 1, 3, 3, 1, 0, 2.5, -1, 0, -3, 1, 0, -3, 1, 3, -3, -1, 3, 3, 1, 3, 3, 1, 0, 2.5, 1.5, 1.5, -3, 1.5, 1.5, 3, -1, 0, 2.5, -1.5, 1.5, -3, -1, 0, -3, 0.8197, 0.2704, 2.5901, 1.5, 1.5, 3, 1.2296, 1.5, 3, 1.5, 1.5, 3, 0.8197, 2.7296, 3, 1.2296, 1.5, 3, -0.8197, 2.7296, 3, -1.5, 1.5, 3, -1.2296, 1.5, 3, 0.8197, 2.7296, 3, -1, 3, 3, -0.8197, 2.7296, 3, -1, 0, 2.5, 0.8197, 0.2704, 2.5901, -0.8197, 0.2704, 2.5901, 0.8197, 2.7296, 3.05, -0.8197, 2.7296, 3.05, -1.2296, 1.5, 3.05, 1.2296, 1.5, 3.05, -1.2296, 1.5, 3.05, -0.8197, 0.2704, 2.6401, 0.8197, 2.7296, 3.05, -1.2296, 1.5, 3.05, 1.2296, 1.5, 3.05, 1.2296, 1.5, 3.05, -0.8197, 0.2704, 2.6401, 0.8197, 0.2704, 2.6401, 0.8197, 2.7296, 3.05, 0.8197, 2.7296, 3, -0.8197, 2.7296, 3, 0.8197, 0.2704, 2.6401, 0.8197, 0.2704, 2.5901, 1.2296, 1.5, 3, -0.8197, 0.2704, 2.6401, -0.8197, 0.2704, 2.5901, 0.8197, 0.2704, 2.5901, -0.8197, 2.7296, 3.05, -0.8197, 2.7296, 3, -1.2296, 1.5, 3, -1.2296, 1.5, 3, -0.8197, 0.2704, 2.5901, -0.8197, 0.2704, 2.6401, 1.2296, 1.5, 3.05, 1.2296, 1.5, 3, 0.8197, 2.7296, 3, 0.8197, 2.7296, 3.05, -0.8197, 2.7296, 3, -0.8197, 2.7296, 3.05, 0.8197, 0.2704, 2.6401, 1.2296, 1.5, 3, 1.2296, 1.5, 3.05, -0.8197, 0.2704, 2.6401, 0.8197, 0.2704, 2.5901, 0.8197, 0.2704, 2.6401, -0.8197, 2.7296, 3.05, -1.2296, 1.5, 3, -1.2296, 1.5, 3.05, -1.2296, 1.5, 3, -0.8197, 0.2704, 2.6401, -1.2296, 1.5, 3.05, 1.2296, 1.5, 3.05, 0.8197, 2.7296, 3, 0.8197, 2.7296, 3.05 )

[sub_resource type="SphereMesh" id=5]
radius = 0.1
height = 0.05
radial_segments = 6
rings = 3
is_hemisphere = true

[sub_resource type="SpatialMaterial" id=6]
emission_enabled = true
emission = Color( 1, 1, 1, 1 )
emission_energy = 16.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SphereMesh" id=7]
flip_faces = true
radius = 5.0
height = 10.0

[sub_resource type="Shader" id=8]
code = "shader_type spatial;
render_mode unshaded;
uniform sampler2D tex;

void fragment(){
	ALBEDO = texture(tex, SCREEN_UV).rgb;
}"

[sub_resource type="ViewportTexture" id=13]
viewport_path = NodePath("ViewportContainer/Viewport")

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/tex = SubResource( 13 )

[sub_resource type="GDScript" id=10]
script/source = "extends KinematicBody

var vec = Vector2()
var velocity = Vector3()

const speed = 0.5

func controls_update(newvec : Vector2):
	vec = newvec

func _ready():
	$\"/root/ControllerApi\".connect(\"character_movement\", self, \"controls_update\")


func _physics_process(delta):
	var facing = Plane.PLANE_XZ.project($facing.global_transform.basis.z).normalized()
	var move_basis = Basis(-facing.cross(Vector3.UP), Vector3.UP, facing).orthonormalized()
	
	var target_vel = Vector3(0, 0, 0)
	target_vel += move_basis.z * vec.y
	target_vel += move_basis.x * vec.x
	target_vel *= speed
	target_vel -= move_basis.y * -9.6
	vec = Vector2()
	print(target_vel)
	velocity = velocity.linear_interpolate(target_vel, delta*10)
	
	velocity = move_and_slide(velocity, Vector3.UP)
	
	if Input.is_action_just_pressed(\"control\"):
		$\"/root/ControllerApi\".toggle_submarine()
	pass
"

[sub_resource type="CapsuleShape" id=11]
radius = 0.2
height = 1.6

[sub_resource type="GDScript" id=12]
script/source = "extends Spatial

const sensetivity = 0.25

func _ready():
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _input(event):
	if event is InputEventMouseMotion:
		var rotation_delta = Vector3(0, 0, 0)
		rotation_delta.y += event.relative.x
		rotation_delta.x += event.relative.y
		rotation_delta *= -sensetivity
		
		rotation_degrees += rotation_delta
		rotation_degrees.x = clamp(rotation_degrees.x, -89.9, 89.9)
"

[sub_resource type="GDScript" id=14]
script/source = "extends RigidBody

const engine = 10.0
const upwards_eng = 10.0
const torque = 10.0

var vec : Vector2 = Vector2()
var upward : float = 0.0

func controls_update(in_vec :Vector2, in_upward:float):
	vec = in_vec
	upward = in_upward


func _ready():
	$\"/root/ControllerApi\".connect(\"submarine_movement\", self, \"controls_update\")
	
	
	pass

func _physics_process(delta):
	add_central_force(-transform.basis.z * engine * vec.y + upward * upwards_eng * Vector3.UP)
	add_torque(Vector3(0, -torque* vec.x,0))
	vec = Vector2()
	upward = 0.0
	pass
"

[sub_resource type="BoxShape" id=15]
extents = Vector3( 1.7, 1.7, 3.5 )

[node name="submarine_world" type="Spatial"]

[node name="control_pad" type="MeshInstance" parent="."]
layers = 2
mesh = SubResource( 1 )
skeleton = NodePath("")

[node name="StaticBody" type="StaticBody" parent="control_pad"]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape" type="CollisionShape" parent="control_pad/StaticBody"]
shape = SubResource( 3 )

[node name="interior" type="MeshInstance" parent="."]
layers = 2
mesh = SubResource( 2 )
skeleton = NodePath("")

[node name="StaticBody" type="StaticBody" parent="interior"]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape" type="CollisionShape" parent="interior/StaticBody"]
shape = SubResource( 4 )

[node name="ReflectionProbe" type="ReflectionProbe" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, -0.2 )
layers = 2
max_distance = 20.0
extents = Vector3( 1.5, 1.51, 3.31 )
box_projection = true
enable_shadows = true
cull_mask = 1048574
interior_enable = true

[node name="lamp" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -1, 8.74228e-08, 0, -8.74228e-08, -1, 0, 3, 1.263 )
layers = 2
cast_shadow = 0
mesh = SubResource( 5 )
material/0 = SubResource( 6 )

[node name="OmniLight" type="OmniLight" parent="lamp"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0801613, 0 )
layers = 2
light_energy = 0.5
shadow_enabled = true
omni_range = 6.0

[node name="background" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, 0 )
layers = 2
cast_shadow = 0
mesh = SubResource( 7 )
material/0 = SubResource( 9 )

[node name="cam_offset" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, 0 )

[node name="RemoteTransform" type="RemoteTransform" parent="cam_offset"]
transform = Transform( -0.631096, 0, -0.775705, 0, 1, 0, 0.775705, 0, -0.631096, 0, 0.3, 1.32964 )
remote_path = NodePath("../../ViewportContainer/Viewport/ocean/submarine/Camera")
use_global_coordinates = false

[node name="Camera" type="Camera" parent="cam_offset/RemoteTransform"]
cull_mask = 1048574
current = true

[node name="player" type="KinematicBody" parent="."]
transform = Transform( 0.631096, 0, 0.775705, 0, 1, 0, -0.775705, 0, 0.631096, 0, 0, 1.32964 )
collision_layer = 2
collision_mask = 2
axis_lock_motion_y = true
move_lock_y = true
script = SubResource( 10 )

[node name="CollisionShape" type="CollisionShape" parent="player"]
transform = Transform( 1, 0, 0, 0, 0, 1, 0, -1, 0, 0, 1, 0 )
shape = SubResource( 11 )

[node name="facing" type="RemoteTransform" parent="player"]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 1.8, 0 )
remote_path = NodePath("../../cam_offset/RemoteTransform")
script = SubResource( 12 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
anchor_left = -1.0
anchor_bottom = 1.0
stretch = true

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1024, 600 )
handle_input_locally = false
render_target_update_mode = 3

[node name="ocean" type="Spatial" parent="ViewportContainer/Viewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 20, 0 )

[node name="chunker" type="Spatial" parent="ViewportContainer/Viewport/ocean"]
script = ExtResource( 4 )

[node name="submarine" type="RigidBody" parent="ViewportContainer/Viewport/ocean"]
unique_name_in_owner = true
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 25, 0 )
gravity_scale = 0.5
axis_lock_angular_x = true
axis_lock_angular_z = true
linear_damp = 1.0
angular_damp = 10.0
script = SubResource( 14 )

[node name="CollisionShape" type="CollisionShape" parent="ViewportContainer/Viewport/ocean/submarine"]
shape = SubResource( 15 )

[node name="Camera" type="Camera" parent="ViewportContainer/Viewport/ocean/submarine"]
transform = Transform( -0.631096, 0, -0.775705, 0, 1, 0, 0.775705, 0, -0.631096, 0, 0.3, 1.32964 )
cull_mask = 1047553
current = true
near = 0.1
far = 500.0

[node name="SpotLight" type="SpotLight" parent="ViewportContainer/Viewport/ocean/submarine"]
transform = Transform( 1, 0, 0, 0, -0.939693, 0.34202, 0, -0.34202, -0.939693, 0, 1.5, 3.5 )
spot_range = 50.0

[node name="OmniLight" type="OmniLight" parent="ViewportContainer/Viewport/ocean/submarine"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3.48243 )
light_color = Color( 0.933333, 0.545098, 0, 1 )
